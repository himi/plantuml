<?xml version="1.0" encoding="UTF-8"?>
<project name="Handle p2 composite metadata from GitHub" basedir=".">

  <property environment="env"/>
  <property name="github.user" value="${env.GITHUB_USER}" />
  <property name="github.apikey" value="${env.GITHUB_APIKEY}" />
  <!--
    These must be set from outside
    <property name="github.repo" value="" />
    <property name="github.branch" value="" />
  -->

  <property name="github.url" value="https://raw.githubusercontent.com/${github.owner}/${github.repo}/${github.branch}"/>

  <property name="package.version" value="${unqualifiedVersion}.${buildQualifier}" />
  <property name="releases.target.path" value="${releases.path}/${package.version}" />

  <property name="main.composite.url" value="${github.url}/${composite.path}" />
  <property name="target" value="target" />
  <property name="composite.repository.directory" value="composite-child" />
  <property name="main.composite.repository.directory" value="composite-main" />

  <property name="compositeArtifacts" value="compositeArtifacts.xml" />
  <property name="compositeContent" value="compositeContent.xml" />

  <property name="local.p2.repository" value="target/repository" />

  <target name="getMajorMinorVersion">
    <script language="javascript">
      <![CDATA[
      // getting the value
      buildnumber = project.getProperty("unqualifiedVersion");
      index = buildnumber.lastIndexOf(".");
      counter = buildnumber.substring(0, index);
      project.setProperty("majorMinorVersion",counter);
      ]]>
    </script>
  </target>

  <!-- Take from the remote URL the possible existing metadata -->
  <target name="get-composite-metadata" depends="getMajorMinorVersion" >
    <get-metadata url="${main.composite.url}" dest="${target}/${main.composite.repository.directory}" />
    <get-metadata url="${main.composite.url}/${majorMinorVersion}" dest="${target}/${composite.repository.directory}" />
    <antcall target="preprocess-metadata" />
  </target>

  <macrodef name="get-metadata" description="Retrieve the p2 composite metadata">
    <attribute name="url" />
    <attribute name="dest" />
    <sequential>
      <echo message="Creating directory @{dest}..." />
      <mkdir dir="@{dest}" />
      <get-file file="${compositeArtifacts}" url="@{url}" dest="@{dest}" />
      <get-file file="${compositeContent}" url="@{url}" dest="@{dest}" />
    </sequential>
  </macrodef>

  <macrodef name="get-file" description="Use Ant Get task the file">
    <attribute name="file" />
    <attribute name="url" />
    <attribute name="dest" />
    <sequential>
      <!-- If the remote file does not exist then fail gracefully -->
      <echo message="Getting @{file} from @{url} into @{dest}..." />
      <get dest="@{dest}" ignoreerrors="true">
	<url url="@{url}/@{file}" />
      </get>
    </sequential>
  </macrodef>

  <!-- p2.atomic.composite.loading must be set to false otherwise we won't be able
       to add a child to the composite repository without having all the children available -->
  <target name="preprocess-metadata" description="Preprocess p2 composite metadata">
    <replaceregexp byline="true">
      <regexp pattern="property name='p2.atomic.composite.loading' value='true'" />
      <substitution expression="property name='p2.atomic.composite.loading' value='false'" />
      <fileset dir="${target}">
	<include name="${composite.repository.directory}/*.xml" />
	<include name="${main.composite.repository.directory}/*.xml" />
      </fileset>
    </replaceregexp>
  </target>

  <!-- p2.atomic.composite.loading must be set to true
       see https://bugs.eclipse.org/bugs/show_bug.cgi?id=356561 -->
  <target name="postprocess-metadata" description="Preprocess p2 composite metadata">
    <replaceregexp byline="true">
      <regexp pattern="property name='p2.atomic.composite.loading' value='false'" />
      <substitution expression="property name='p2.atomic.composite.loading' value='true'" />
      <fileset dir="${target}">
	<include name="${composite.repository.directory}/*.xml" />
	<include name="${main.composite.repository.directory}/*.xml" />
      </fileset>
    </replaceregexp>
  </target>

  <target name="push-to-github" >
    <antcall target="postprocess-metadata" />
    <antcall target="push-p2-repo-to-github" />
    <!-- Currently it's disabled.  We should put zipped update site to GitHub release -->
    <!-- <antcall target="push-p2-repo-zipped-to-github" /> -->
    <antcall target="push-composite-to-github" />
    <antcall target="push-main-composite-to-github" />
  </target>

  <target name="push-p2-repo-to-github">
    <!--
    <apply executable="cmd" parallel="false" relative="true" addsourcefile="false">
      <arg value="/c" />
      <arg value="echo" />
      <targetfile />

      <fileset dir="${local.p2.repository}">
        <include name="*"/>
        <include name="plugins/*"/>
        <include name="features/*"/>
      </fileset>

      <chainedmapper>
        <filtermapper>
          <replacestring from="\" to="/"/>
        </filtermapper>
        <compositemapper>
          <mergemapper to="-T" />
          <globmapper from="*" to="${local.p2.repository}/*" />
          <mergemapper to="-u${github.user}:${github.apikey}" />
          <globmapper from="*" to="https://api.github.com/content/${github.owner}/${github.repo}/${github.releases.target.path}/*;bt_package=${github.package};bt_version=${github.package.version};publish=1" />
        </compositemapper>
      </chainedmapper>
    </apply>
    -->

    <apply executable="bash" parallel="false" relative="true" addsourcefile="false">
      <arg value='./github-put.sh' />
      <targetfile />

      <fileset dir="${local.p2.repository}">
        <include name="*"/>
        <include name="plugins/*"/>
        <include name="features/*"/>
      </fileset>

      <chainedmapper>
        <filtermapper>
          <replacestring from="\" to="/"/>
        </filtermapper>
        <compositemapper>
          <globmapper from="*" to="${local.p2.repository}/*" />
          <mergemapper to="${github.user}:${github.apikey}" />
          <mergemapper to="${github.branch}" />
          <globmapper from="*" to="https://api.github.com/repos/${github.owner}/${github.repo}/contents/${releases.target.path}/*" />
        </compositemapper>
      </chainedmapper>
    </apply>
  </target>

  <target name="push-p2-repo-zipped-to-github">
    <apply executable="bash" parallel="false" relative="true" addsourcefile="false">
      <arg value='./github-put.sh' />
      <targetfile />

      <fileset dir="${target}" includes="*.zip" />

      <compositemapper>
	<globmapper from="*" to="${target}/*" />
	<mergemapper to="${github.user}:${github.apikey}" />
	<mergemapper to="${github.branch}" />
	<globmapper from="*" to="https://api.github.com/repos/${github.owner}/${github.repo}/contents/${zip.path}/*" />
      </compositemapper>
    </apply>
  </target>

  <target name="push-composite-to-github" depends="getMajorMinorVersion" >
    <apply executable="bash" parallel="false" relative="true" addsourcefile="false">
      <arg value='./github-put.sh' />
      <targetfile />

      <fileset dir="${target}/${composite.repository.directory}" />

      <compositemapper>
	<globmapper from="*" to="${target}/${composite.repository.directory}/*" />
	<mergemapper to="${github.user}:${github.apikey}" />
	<mergemapper to="${github.branch}" />
	<globmapper from="*" to="https://api.github.com/repos/${github.owner}/${github.repo}/contents/${composite.path}/${majorMinorVersion}/*" />
      </compositemapper>
    </apply>
  </target>

  <target name="push-main-composite-to-github" >
    <apply executable="bash" parallel="false" relative="true" addsourcefile="false">
      <arg value='./github-put.sh' />
      <targetfile />

      <fileset dir="${target}/${main.composite.repository.directory}" />

      <compositemapper>
	<globmapper from="*" to="${target}/${main.composite.repository.directory}/*" />
	<mergemapper to="${github.user}:${github.apikey}" />
	<mergemapper to="${github.branch}" />
	<globmapper from="*" to="https://api.github.com/repos/${github.owner}/${github.repo}/contents/${composite.path}/*" />
      </compositemapper>
    </apply>
  </target>

</project>